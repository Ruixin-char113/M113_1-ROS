<?xml version="1.0" ?>
<robot name="myrobot"  xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Constants for robot dimensions -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="base_link_l" value="0.4" /> 
  <xacro:property name="base_link_w" value="0.3" /> 
  <xacro:property name="base_link_h" value="0.1" /> 
  <xacro:property name="base_link_mass" value="2" /> 

  <xacro:property name="wheel_length" value="0.05" /> 
  <xacro:property name="wheel_radius" value="0.05" /> 
  <xacro:property name="wheel_mass" value="0.2" /> 

  <xacro:property name="caster_radius" value="0.025" /> 
  <xacro:property name="caster_mass" value="0.05" /> 

  <xacro:property name="laser_scanner_base_link_height" value="0.05" /> 
  <xacro:property name="laser_scanner_base_link_radius" value="0.1" /> 
  <xacro:property name="laser_scanner_base_link_mass"   value="0.5" /> 

  <!-- color definition-->
  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="orange">
    <color rgba="1 0.65 0 1"/>
  </material>
  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>
  <material name="green">
    <color rgba="0 1 0 1"/>
  </material>
  <material name="gray">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>

  <!-- Macros -->
  <xacro:macro name="cube_inertial" params="mass">
         <inertial>
                  <mass value="${mass}" />
                  <inertia ixx="0.01" ixy="0.0"   ixz="0.0"
                                      iyy="0.02"  iyz="0.0"
                                                  izz="0.041" />
         </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertial" params="mass">
    <inertial>
      <mass value="${mass}"/>
      <inertia ixx="0.0001" ixy="0.0"     ixz="0.0"
                            iyy="0.0001"  iyz="0.0"
                                          izz="0.0001"/>
      <!-- <inertia ixx="${ixx}" ixy="0.0"     ixz="0.0"
                            iyy="${iyy}"  iyz="0.0"
                                          izz="${izz}"/> -->
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertial" params="mass">
    <inertial>
      <mass value="${mass}"/>
      <inertia ixx="1.2e-05" ixy="0.0"     ixz="0.0"
                            iyy="1.2e-05"  iyz="0.0"
                                           izz="1.2e-05"/>
    </inertial>
  </xacro:macro>

  <!-- <xacro:macro name="wheel" params="prefix reflect material"> 
    <link name="${prefix}_wheel">
      <visual>
        <geometry>
          <cylinder length="${wheel_length}" radius="${wheel_radius}"/>
        </geometry>
        <material name="${material}"/>
        <origin rpy="${PI*0.5} 0 0" xyz="0 ${reflect*wheel_length*0.5} 0"/> 
        <material name="red"/>
      </visual>

      <collision>
        <geometry>
          <cylinder length="${wheel_length}" radius="${wheel_radius}"/> 
        </geometry>
        <origin rpy="${PI*0.5} 0 0" xyz="0 ${reflect*wheel_length*0.5} 0"/> 
      </collision>

      <xacro:cylinder_inertial mass="${wheel_mass}" ixx="0.0001" iyy="0.0001" izz="0.0001"/> 
    </link>

    <gazebo reference="${prefix}_wheel">
      <material>Gazebo/${material}</material>
    </gazebo>

    <joint name="wheel_${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_wheel"/>
      <origin xyz="${base_link_w*0.25} ${reflect*base_link_l*0.5} -${base_link_h*0.25}"/> 
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro> -->

<!--=======================-->
  
<!--footprint dummy link -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link" />
    <origin xyz="0 0 0.05" rpy="0 0 0"/>
  </joint>
<!--=======================-->
  
<!--base link --> 
  <link name="base_link">
    <visual>
      <geometry>
        <cylinder length="${base_link_h}" radius="${base_link_l/2}"/> 
      </geometry>
      <material name="orange"/>
    </visual>

    <collision>
      <geometry>
        <cylinder length="${base_link_h}" radius="${base_link_l/2}"/> 
      </geometry>
    </collision>

    <xacro:cube_inertial mass="${base_link_mass}"/>
  </link>
  
  <gazebo reference="base_link">
    <material>Gazebo/Orange</material>
  </gazebo>

<!--============================================-->  
  <!--right wheel -->
    <!-- <xacro:wheel prefix="right" reflect="-1" material="Red"/> -->
  <link name="right_wheel">
    <visual>
      <geometry>
        <cylinder length="${wheel_length}" radius="${wheel_radius}"/> 
      </geometry>
      <material name="red"/>
      <origin rpy="1.57075 0 0" xyz="0 -0.025 0"/>
      <material name="red"/>
    </visual>

    <collision>
      <geometry>
        <cylinder length="${wheel_length}" radius="${wheel_radius}"/> 
      </geometry>
      <origin rpy="1.57075 0 0" xyz="0 -0.025 0"/> 
    </collision>

    <xacro:cylinder_inertial mass="${wheel_mass}"/> 
  </link>

  <gazebo reference="right_wheel"> 
    <material>Gazebo/Red</material>
  </gazebo>

  <joint name="wheel_right_joint" type="continuous"> 
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin xyz="0 -0.2 -0.025"/>
    <axis xyz="0 1 0"/>
  </joint>
<!--============================================--> 
  <!--left wheel -->
    <!-- <xacro:wheel prefix="left" reflect="-1" material="green"/> -->
  <link name="left_wheel">
    <visual>
      <geometry>
        <cylinder length="${wheel_length}" radius="${wheel_radius}"/> 
      </geometry>
      <material name="green"/>
      <origin rpy="1.57075 0 0" xyz="0 0.025 0"/>
    </visual>

    <collision>
      <geometry>
        <cylinder length="${wheel_length}" radius="${wheel_radius}"/> 
      </geometry>
      <origin rpy="1.57075 0 0" xyz="0 0.025 0"/> 
    </collision>

    <xacro:cylinder_inertial mass="${wheel_mass}"/> 
  </link>

  <gazebo reference="left_wheel">
    <material>Gazebo/Green</material>
  </gazebo>

  <joint name="wheel_left_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin xyz="0 0.2 -0.025"/>
    <axis xyz="0 1 0"/>
  </joint>
<!--============================================--> 
  <!--right caster-->
  <link name="right_caster">
    <visual>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
      <origin xyz="0 0 0"/>
      <material name="gray"/>
    </visual>

    <collision>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
      <origin xyz="0 0 0"/>
    </collision>

    <xacro:sphere_inertial mass="${caster_mass}"/>
  </link>

  <gazebo reference="right_caster"> 
    <material>Gazebo/Gray</material>
  </gazebo>

  <joint name="base_to_right_caster" type="fixed">
    <parent link="base_link"/>
    <child link="right_caster"/>
    <origin xyz="${base_link_l/4} 0 -${base_link_h*0.5}"/> 
  </joint>
<!--============================================--> 
  <!--left caster-->
  <link name="left_caster">
    <visual>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
      <origin xyz="0 0 0"/>
      <material name="gray"/>
    </visual>

    <collision>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
      <origin xyz="0 0 0"/>
    </collision>

    <xacro:sphere_inertial mass="${caster_mass}"/>
  </link>

  <gazebo reference="left_caster">
    <material>Gazebo/Gray</material>
  </gazebo>

  <joint name="base_to_left_caster" type="fixed">
    <parent link="base_link"/>
    <child link="left_caster"/>
    <origin xyz="-${base_link_l/4} 0 -${base_link_h*0.5}"/> 
  </joint>
<!--============================================--> 
<!-- imu -->
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0.0 0 0" rpy="0 0 0"/> 
  </joint>

  <link name="imu_link"/>
<!--============================================--> 
<!-- laser scanner base link -->
  <link name="laser_scanner_base_link">
    <visual>
      <geometry>
        <cylinder length="${laser_scanner_base_link_height}" radius="${laser_scanner_base_link_radius}"/> 
      </geometry>
      <origin xyz="0 0 ${laser_scanner_base_link_height*0.5}"/>
      <material name="blue"/>
    </visual> 

    <collision>
      <geometry>
        <cylinder length="${laser_scanner_base_link_height}" radius="${laser_scanner_base_link_radius}"/> 
      </geometry>
      <origin xyz="0 0 ${laser_scanner_base_link_height*0.5}"/> 
    </collision>

    <xacro:cylinder_inertial mass="${laser_scanner_base_link_mass}"/> 
  </link>

  <joint name="base_link_to_laser_scanner_base_link" type="fixed"> 
    <parent link="base_link"/>
    <child link="laser_scanner_base_link" /> 
    <origin xyz="0 0 ${base_link_h*0.5}"/>
  </joint>

  <gazebo reference="laser_scanner_base_link">
    <material>Gazebo/Blue</material>
  </gazebo>
<!--============================================-->
  <!-- laser scanner -->
  <link name="base_scan">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://turtlebot3_description/meshes/sensors/lds.stl" scale="0.001 0.001 0.001"/> 
      </geometry>
      <material name="black"/>
    </visual>

    <collision>
      <origin xyz="0.015 0 -0.0065" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.0315" radius="0.055"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="0.114" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001" ixy="0.0"   ixz="0.0"
                           iyy="0.001" iyz="0.0"
                                       izz="0.001" />
    </inertial>
  </link>
  
  <joint name="scan_joint" type="fixed"> 
    <parent link="laser_scanner_base_link"/> 
    <child link="base_scan"/>
    <origin xyz="0 0 0.07" rpy="0 0 0"/>
  </joint>

  <gazebo reference="base_scan">
    <material>Gazebo/Black</material>
  </gazebo>
<!--============================================-->
  <gazebo reference="left wheel">
    <mu1>0.1000</mu1>
    <mu2>0.1000</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdirl>1 0 0</fdirl>
  </gazebo>

  <gazebo reference="right_wheel">
    <mu1>0.1000</mu1>
    <mu2>0.1000</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>

  <gazebo reference="left_caster">
    <mu1>0.0</mu1> 
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="right_caster">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName> 
      <frameName>imu_link</frameName> 
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>0</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>

  <xacro:arg name="laser_visual" default="true"/>
  <gazebo reference="base_scan"> 
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="lds_lfcd_sensor"> 
      <pose>0 0 0 0 0 0</pose>
      <visualize>$(arg laser_visual)</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120</min>
          <max>3.5</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>base_scan</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo>
    <plugin name="turtlebot3_waffle_controller" filename="libgazebo_ros_diff_drive.so">
      <commandTopic>cmd_vel</commandTopic> 
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel_left_joint</leftJoint> 
      <rightJoint>wheel_right_joint</rightJoint> 
      <wheelSeparation>0.45</wheelSeparation>
      <wheelDiameter>0.1</wheelDiameter>
      <wheelAcceleration>1</wheelAcceleration>
      <wheelTorque>10</wheelTorque> 
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>
<!--============================================-->
</robot>

